name: Build, Test, and Deploy App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2.2.0

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.7.0

      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: markolly/test-app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Run unit tests
        if: ${{ steps.build.outputs.return-code == 0 }}  # Only run if the build succeeded
        run: |
          pip install -r requirements.txt  # Install test dependencies
          python -m unittest tests/test_unit_app.py

      - name: Run tests
        if: ${{ steps.build.outputs.return-code == 0 }}  # Only run if the build succeeded
        run: |
          # Install pytest and other test dependencies
          pip install -r requirements.txt

          # Start the Docker container locally
          docker run -d -p 8080:8080 markolly/test-app:latest

          # Wait for the app to start up
          sleep 5

          # Run tests using pytest
          pytest tests/test_integration_app.py

      - name: Push image to registry
        if: ${{ steps.build.outputs.return-code == 0 }}
        run: docker push markolly/test-app:latest

  mkdocs:
    needs: build
    runs-on: ubuntu-latest

    if: ${{ needs.build.result == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: MkDocs Build
        uses: Tiryoh/actions-mkdocs@v0
        with:
          mkdocs_version: 'latest'
          configfile: 'mkdocs.yml'
          
      - name: MkDocs Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./site
      